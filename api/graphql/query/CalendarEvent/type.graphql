enum CalendarEventType {
  OfflineClass
  OnlineClass
  CourseRecording
  OffSiteWorkshop
  Meeting
  OOO
  Youtube
  Other
}

type CalendarEventTypeColorMap {
  name: String!
  title: String!
  color: String!
}

type CalendarEvent implements Node {
  id: ID!
  title: String!
  description: String
  type: CalendarEventType!
  location: String
  organiser: User!
  start_at: DateTime!
  end_at: DateTime!
  is_open: Boolean!
  is_public: Boolean!
  slug: String
  invites: [CalendarEventInvite!]!
  resources: [Resource!] @protected
  inviteStatus: CalendarEventInviteStatus
}

type CalendarEventEdge {
  node: CalendarEvent!
  cursor: String!
}

type CalendarEventConnection {
  edges: [CalendarEventEdge!]!
  pageInfo: PageInfo!
}

extend type Query {
  event(id: ID, slug: String = ""): CalendarEvent
    @protected(post_execution: true)

  events(
    limit: Int
    before: String
    after: String
    exclude: [ID!]
    dateTimeRange: DateTimeRangeInput!
    types: [CalendarEventType!]
    attendees: [ID!]
  ): CalendarEventConnection @requireFeature(name: "calendar")

  eventTypeColors: [CalendarEventTypeColorMap!]!
}
