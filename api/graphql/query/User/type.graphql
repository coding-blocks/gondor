enum UserRoleName {
  Admin
  Member
  User
}

type User implements Node {
  id: ID!
  username: String!
  role: UserRoleName!
  firstname: String
  lastname: String
  ... @protected {
    email: String
    mobile_number: String
    photo: String
    events(
      limit: Int
      before: String
      after: String
      exclude: [ID!]
      dateTimeRange: DateTimeRangeInput!
    ): CalendarEventConnection @requireFeature(name: "calendar")
    availability(dateTimeRange: DateTimeRangeInput!): Boolean
  }
}

type UserEdge {
  node: User!
  cursor: String!
}

type UserConnection {
  edges: [UserEdge!]!
  pageInfo: PageInfo!
}

extend type Query {
  user(id: ID!): User @protected
  users(
    roles: [UserRoleName!]
    search: String
    exclude: [ID!]
    limit: Int
    before: String
    after: String
    orderBy: String
    orderDirection: OrderDirection = DESC
  ): UserConnection @requireFeature(name: "teamManagement")
}
